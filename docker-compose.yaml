networks:
  backend:

services:
  cache:
    image: redis
    container_name: redis-cache
    networks:
      - backend
    restart: always
    ports:
      - 6379:6379

  mongo:
    image: mongo
    container_name: mongo-data
    restart: always
    networks:
      - backend
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=AzureDiamond
      - MONGO_INITDB_ROOT_PASSWORD=hunter2
  
  webapi:
    image: ${DOCKER_REGISTRY-}controllerapi
    container_name: web-api
    networks:
      - backend
    build:
      context: . # context at the root is the path containing the compose file
      dockerfile: WebApiControllers/Dockerfile
    ports:
      - 5112:80
    depends_on:
      - mongo
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Development
      - MONGODB_CONN=mongodb://AzureDiamond:hunter2@mongo:27017
  
  httpapi:
    image: ${DOCKER_REGISTRY-}httpclientapi
    container_name: http-api
    networks:
      - backend
    build:
      context: ./WebApiHttpClient
      dockerfile: Dockerfile
    ports:
      - 5062:80
    depends_on:
      - webapi
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Development
      - RESTUARANT_API=http://webapi